# Import the AWS PowerShell module
Import-Module AWSPowerShell

# Define the AWS region (update with your region)
$region = 'us-west-2'

# Define tag values to match
$accessGroupTagValue = 'your_access_group_value'
$partnerTagValue = 'your_partner_value'

# Define IAM credentials (replace with your IAM credentials)
$accessKey = 'YOUR_ACCESS_KEY'
$secretKey = 'YOUR_SECRET_KEY'
#$sessionToken = 'YOUR_SESSION_TOKEN'  # Only if using temporary credentials

# Starting port for port forwarding
$startingPort = 9999
$currentPort = $startingPort

# Retrieve instances that match the tag conditions
$instances = Get-EC2Instance -Region $region -AccessKey $accessKey -SecretKey $secretKey | Where-Object {
    $_.Instances.Tags | Where-Object { $_.Key -eq "AccessGroup" -and $_.Value -eq $accessGroupTagValue } -and
    $_.Instances.Tags | Where-Object { $_.Key -eq "partner" -and $_.Value -eq $partnerTagValue }
}

# Check if any instances match the criteria
if ($instances.Instances) {
    Write-Output "Found the following instances matching the specified tags:"
    foreach ($instance in $instances.Instances) {
        $instanceId = $instance.InstanceId
        $instanceName = ($instance.Tags | Where-Object { $_.Key -eq 'Name' }).Value

        # Start SSM session with port forwarding
        Write-Output "Starting SSM session for instance $instanceId on local port $currentPort"
        $ssmSession = Start-SSMSession -Target $instanceId -DocumentName AWS-StartPortForwardingSession -Parameters @{
            'portNumber' = 3389
            'localPortNumber' = $currentPort
        } -AccessKey $accessKey -SecretKey $secretKey -SessionToken $sessionToken

        # Generate RDP file content with forwarded port
        $rdpFilePath = "$env:USERPROFILE\Downloads\$instanceId.rdp"
        $rdpContent = "full address:s:localhost:$currentPort`nusername:s:Administrator"
        Set-Content -Path $rdpFilePath -Value $rdpContent -Encoding ASCII
        Write-Output "RDP file created for instance $instanceId at $rdpFilePath (Port: $currentPort)"

        # Increment port for the next instance
        $currentPort++
    }
} else {
    Write-Output "No instances found with the specified tags."
}
