import boto3
from botocore.exceptions import NoCredentialsError, ClientError
import os
from boto3.s3.transfer import TransferConfig

def upload_large_file_to_s3(file_path, bucket_name, object_name=None, multipart_threshold=100*1024*1024, multipart_chunksize=50*1024*1024):
    """
    Upload a large file to S3 using multipart upload.

    :param file_path: Path to the file to upload.
    :param bucket_name: Name of the S3 bucket.
    :param object_name: S3 object name. Defaults to file's basename.
    :param multipart_threshold: Size (in bytes) to trigger multipart upload.
    :param multipart_chunksize: Size (in bytes) of each part.
    :return: True if upload succeeded, else False.
    """
    if object_name is None:
        object_name = os.path.basename(file_path)

    # Configure transfer settings
    config = TransferConfig(
        multipart_threshold=multipart_threshold,
        multipart_chunksize=multipart_chunksize,
        use_threads=True
    )

    s3_client = boto3.client('s3')

    try:
        print(f"Uploading {file_path} to s3://{bucket_name}/{object_name}...")
        s3_client.upload_file(
            Filename=file_path,
            Bucket=bucket_name,
            Key=object_name,
            Config=config
        )
        print("Upload completed successfully.")
        return True
    except FileNotFoundError:
        print(f"Error: The file {file_path} was not found.")
    except NoCredentialsError:
        print("Error: AWS credentials not available.")
    except ClientError as e:
        print(f"Error uploading file: {e}")
    return False

# Example usage
if __name__ == "__main__":
    ova_file = 'path/to/your/large_file.ova'  # Replace with your large OVA file path
    bucket = 'your-s3-bucket-name'           # Replace with your S3 bucket name

    upload_success = upload_large_file_to_s3(ova_file, bucket)

    if upload_success:
        print("Large file upload completed successfully.")
    else:
        print("Large file upload failed.")
