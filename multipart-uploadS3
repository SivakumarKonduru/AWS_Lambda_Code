import boto3
import requests
import math

# Initialize the S3 client
s3_client = boto3.client('s3')

# Function to stream the OVA file from the URL and upload it to S3 in parts
def multipart_upload_from_url_to_s3(bucket_name, s3_key, download_url):
    try:
        # Start the multipart upload
        multipart_upload = s3_client.create_multipart_upload(Bucket=bucket_name, Key=s3_key)
        upload_id = multipart_upload['UploadId']
        part_number = 1
        part_info = {'Parts': []}

        # Set the part size (e.g., 5MB minimum for multipart upload)
        part_size = 5 * 1024 * 1024  # 5 MB

        # Stream the file from the URL
        response = requests.get(download_url, stream=True)
        response.raise_for_status()  # Check for download errors

        # Total size of the file (for logging progress)
        total_size = int(response.headers.get('content-length', 0))
        num_parts = math.ceil(total_size / part_size)

        print(f"Downloading file of size {total_size} bytes in {num_parts} parts.")

        # Read the file in chunks and upload each part to S3
        for chunk in response.iter_content(chunk_size=part_size):
            if not chunk:
                break

            # Upload each chunk as a part
            s3_response = s3_client.upload_part(
                Body=chunk,
                Bucket=bucket_name,
                Key=s3_key,
                PartNumber=part_number,
                UploadId=upload_id
            )

            # Record the part number and ETag for later completion
            part_info['Parts'].append({
                'PartNumber': part_number,
                'ETag': s3_response['ETag']
            })

            print(f"Uploaded part {part_number} of {num_parts}")
            part_number += 1

        # Complete the multipart upload after all parts are uploaded
        s3_client.complete_multipart_upload(
            Bucket=bucket_name,
            Key=s3_key,
            UploadId=upload_id,
            MultipartUpload=part_info
        )
        print(f"Multipart upload completed successfully for {s3_key}")

    except Exception as e:
        print(f"Error during multipart upload: {e}")
        # If there's an error, abort the multipart upload
        s3_client.abort_multipart_upload(Bucket=bucket_name, Key=s3_key, UploadId=upload_id)


# Example usage
bucket_name = "your-s3-bucket-name"
s3_key = "path-in-s3/your-ova-file.ova"  # S3 key (file name in S3)
download_url = "https://example.com/path-to-ova-file.ova"  # URL to download the OVA file

multipart_upload_from_url_to_s3(bucket_name, s3_key, download_url)
