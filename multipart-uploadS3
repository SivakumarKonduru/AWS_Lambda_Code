import boto3
import requests
from botocore.exceptions import BotoCoreError, NoCredentialsError

# Define larger part size (e.g., 500 MB per part)
PART_SIZE = 500 * 1024 * 1024  # 500 MB

def upload_large_ova_to_s3(url, bucket_name, s3_key):
    # Initialize S3 client
    s3_client = boto3.client('s3')

    # Create a multipart upload
    try:
        multipart_upload = s3_client.create_multipart_upload(Bucket=bucket_name, Key=s3_key)
        upload_id = multipart_upload['UploadId']
    except (BotoCoreError, NoCredentialsError) as e:
        print(f"Failed to initiate multipart upload: {e}")
        return None, None

    part_number = 1
    parts = []

    try:
        # Stream the file from the URL
        with requests.get(url, stream=True) as response:
            response.raise_for_status()

            # Buffer the data into larger chunks for multipart upload
            chunk = b''
            for data in response.iter_content(chunk_size=1024 * 1024):  # Read 1MB at a time
                chunk += data

                # If chunk size exceeds PART_SIZE, upload it as a part
                if len(chunk) >= PART_SIZE:
                    # Upload part to S3
                    part_response = s3_client.upload_part(
                        Bucket=bucket_name,
                        Key=s3_key,
                        PartNumber=part_number,
                        UploadId=upload_id,
                        Body=chunk
                    )

                    # Record the part number and ETag for completing the multipart upload
                    parts.append({
                        'PartNumber': part_number,
                        'ETag': part_response['ETag']
                    })

                    # Clear the chunk buffer for the next part
                    chunk = b''
                    part_number += 1

            # Upload the remaining data (less than PART_SIZE)
            if chunk:
                part_response = s3_client.upload_part(
                    Bucket=bucket_name,
                    Key=s3_key,
                    PartNumber=part_number,
                    UploadId=upload_id,
                    Body=chunk
                )
                parts.append({
                    'PartNumber': part_number,
                    'ETag': part_response['ETag']
                })

        # Complete the multipart upload
        s3_client.complete_multipart_upload(
            Bucket=bucket_name,
            Key=s3_key,
            UploadId=upload_id,
            MultipartUpload={'Parts': parts}
        )
        
        print(f"File uploaded successfully to s3://{bucket_name}/{s3_key}")
        return bucket_name, s3_key

    except (requests.exceptions.RequestException, BotoCoreError, NoCredentialsError) as e:
        print(f"Error during upload: {e}")
        # Abort multipart upload if something goes wrong
        s3_client.abort_multipart_upload(Bucket=bucket_name, Key=s3_key, UploadId=upload_id)
        return None, None

# Example usage
url = "https://example.com/path-to-large-ova-file.ova"
bucket_name = "your-s3-bucket"
s3_key = "path-in-s3/large-ova-file.ova"

result_bucket_name, result_s3_key = upload_large_ova_to_s3(url, bucket_name, s3_key)

if result_bucket_name and result_s3_key:
    print(f"Uploaded to Bucket: {result_bucket_name}, Key: {result_s3_key}")
else:
    print("Upload failed.")
