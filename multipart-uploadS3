import boto3
import requests
import hashlib
from botocore.exceptions import BotoCoreError, NoCredentialsError

def download_and_upload_ova(url, bucket_name, s3_key, chunk_size=1024*1024*50):  # 50 MB chunks
    # Initialize S3 client
    s3_client = boto3.client('s3')

    # Hashing object to ensure integrity
    sha256_hash = hashlib.sha256()

    # Streaming download and upload to S3 in chunks
    try:
        with requests.get(url, stream=True) as response:
            response.raise_for_status()
            
            # Create a file-like object for uploading directly to S3 in chunks
            with response.raw as data_stream:
                # Using the fileobjupload with chunking
                s3_client.upload_fileobj(data_stream, bucket_name, s3_key)

                # Process file in chunks
                for chunk in iter(lambda: data_stream.read(chunk_size), b""):
                    sha256_hash.update(chunk)

    except requests.exceptions.RequestException as e:
        print(f"HTTP Request failed: {e}")
        return None

    except (BotoCoreError, NoCredentialsError) as e:
        print(f"Error uploading to S3: {e}")
        return None

    # After the upload is complete, print the hash
    print(f"SHA-256 Hash of OVA: {sha256_hash.hexdigest()}")

    # Return bucket name and key
    return bucket_name, s3_key


# Example usage
url = "https://example.com/path-to-large-ova-file.ova"
bucket_name = "your-s3-bucket"
s3_key = "path-in-s3/large-ova-file.ova"

bucket, key = download_and_upload_ova(url, bucket_name, s3_key)
print(f"File uploaded to S3: s3://{bucket}/{key}")
