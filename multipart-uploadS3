import requests
import boto3

def stream_to_s3(url, s3_bucket, s3_key, chunk_size=1024*1024*50):
    """
    Streams a file from a given URL directly to an S3 bucket and returns the S3 bucket and key.

    :param url: URL of the file to be streamed and uploaded.
    :param s3_bucket: Name of the S3 bucket.
    :param s3_key: S3 object key (path) where the file will be uploaded.
    :param chunk_size: Size of each chunk to be streamed in bytes. Default is 50MB.
    :return: Tuple containing the S3 bucket and key.
    """
    s3_client = boto3.client('s3')
    
    try:
        # Open a streaming connection to the URL
        with requests.get(url, stream=True) as response:
            response.raise_for_status()  # Check for HTTP errors
            
            # Stream the data and upload it to S3
            with response.raw as data:
                print(f"Uploading data from {url} to s3://{s3_bucket}/{s3_key}")
                s3_client.upload_fileobj(data, s3_bucket, s3_key)
                print(f"Upload complete to s3://{s3_bucket}/{s3_key}")
        
        # Return the bucket and key after successful upload
        return s3_bucket, s3_key
    
    except Exception as e:
        print(f"Error during upload: {e}")
        return None

# Example usage
bucket, key = stream_to_s3(
    url="https://example.com/path/to/ova/file.ova",  # Replace with the actual URL
    s3_bucket="your-s3-bucket-name",  # Replace with your S3 bucket
    s3_key="uploads/file.ova"  # Replace with your S3 object key (file path in bucket)
)

if bucket and key:
    print(f"File successfully uploaded to s3://{bucket}/{key}")
